FROM phusion/baseimage
MAINTAINER 4 All Digital  "joe@4alldigital.com"

# Required to run some apt-get commands (fix for Unable to locate package php5 issue)
ENV DEBIAN_FRONTEND noninteractive

# Ensure UTF-8
RUN locale-gen en_GB.UTF-8
ENV LANG       en_GB.UTF-8
ENV LC_ALL     en_GB.UTF-8

ENV XHPROF_VERSION 0.9.4
ENV XDEBUG_VERSION 2.4.0
ENV XDEBUG_MD5 a9bc9c6b9e8bc913fb1f7c6f6d19f6222d430414

FROM debian:jessie

# persistent / runtime deps
ENV PHPIZE_DEPS \
        autoconf \
        file \
        g++ \
        gcc \
        libc-dev \
        make \
        pkg-config \
        re2c
RUN apt-get update && apt-get install -y \
        $PHPIZE_DEPS \
        ca-certificates \
        curl \
        libedit2 \
        libsqlite3-0 \
        libxml2 \
        xz-utils \
    --no-install-recommends && rm -r /var/lib/apt/lists/*

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
##</autogenerated>##

ENV GPG_KEYS 1A4E8B7277C42E53DBA9C7B9BCAA30EA9C0D5763

ENV PHP_VERSION 7.0.8
ENV PHP_FILENAME php-7.0.8.tar.xz
ENV PHP_SHA256 0a2142c458b0846f556b16da1c927d74c101aa951bb840549abe5c58584fb394

RUN set -xe \
    && cd /usr/src/ \
    && curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror" -o php.tar.xz \
    && echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c - \
    && curl -fSL "http://php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o php.tar.xz.asc \
    && export GNUPGHOME="$(mktemp -d)" \
    && for key in $GPG_KEYS; do \
        gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
    done \
    && gpg --batch --verify php.tar.xz.asc php.tar.xz \
    && rm -r "$GNUPGHOME"

COPY docker-php-source /usr/local/bin/

RUN set -xe \
    && buildDeps=" \
        $PHP_EXTRA_BUILD_DEPS \
        libcurl4-openssl-dev \
        libedit-dev \
        libsqlite3-dev \
        libssl-dev \
        libxml2-dev \
    " \
    && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
    && docker-php-source extract \
    && cd /usr/src/php \
    && ./configure \
        --with-config-file-path="$PHP_INI_DIR" \
        --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
        $PHP_EXTRA_CONFIGURE_ARGS \
        --disable-cgi \
# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
        --enable-mysqlnd \
# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
        --enable-mbstring \
        --with-curl \
        --with-libedit \
        --with-openssl \
        --with-zlib \
    && make -j"$(nproc)" \
    && make install \
    && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
    && make clean \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps \
    && docker-php-source delete

COPY docker-php-ext-* /usr/local/bin/

##<autogenerated>##
WORKDIR /var/www/html

RUN set -ex \
    && cd /usr/local/etc \
    && if [ -d php-fpm.d ]; then \
        # for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
        sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
        cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
    else \
        # PHP 5.x don't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
        mkdir php-fpm.d; \
        cp php-fpm.conf.default php-fpm.d/www.conf; \
        { \
            echo '[global]'; \
            echo 'include=etc/php-fpm.d/*.conf'; \
        } | tee php-fpm.conf; \
    fi \
    && { \
        echo '[global]'; \
        echo 'error_log = /proc/self/fd/2'; \
        echo; \
        echo '[www]'; \
        echo '; if we send this to /proc/self/fd/1, it never appears'; \
        echo 'access.log = /proc/self/fd/2'; \
        echo; \
        echo 'clear_env = no'; \
        echo; \
        echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
        echo 'catch_workers_output = yes'; \
    } | tee php-fpm.d/docker.conf \
    && { \
        echo '[global]'; \
        echo 'daemonize = no'; \
        echo; \
        echo '[www]'; \
        echo 'listen = [::]:9000'; \
    } | tee php-fpm.d/zz-docker.conf

EXPOSE 9000
CMD ["php-fpm"]
##</autogenerated>##


# RUN apt-get update && apt-get -q install -y --no-install-recommends php5-fpm php5-curl curl\
#     build-essential php5-dev php5-xdebug wget php5-mcrypt php5-gd imagemagick\
#     php5-xsl php5-imap php5-pgsql php-apc php5-mysql mysql-client ssmtp\
#     php5-common php-pear nginx-extras php5-redis php5-json php5-cli supervisor\
#     msmtp mailutils libncurses-dev zlib1g-dev php5-json openssh-server make\
#     libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl libxslt1-dev libgd2-xpm-dev\
#     libgeoip-dev libxrender1 libssl-dev libXext-dev libbz2-dev libcurl4-openssl-dev\
#     libfreetype6 libfreetype6-dev libfontconfig libfontconfig1 libexpat-dev libssh2-php && \
#     apt-get autoremove

# # Install XHPROF
# RUN curl -L -o /root/xhprof.tgz https://pecl.php.net/get/xhprof-$XHPROF_VERSION.tgz && \
#     cd /root && \
#     mkdir -p /usr/src/xhprof && \
#     tar -zxvf xhprof.tgz -C /usr/src/xhprof --strip-components=1 && \
#     cd /usr/src/xhprof/extension && \
#     phpize && \
#     ./configure --with-php-config=/usr/bin/php-config && \
#     make  && \
#     make install && \
#     cd /root && \
#     rm -fr /root/xhprof-$XHPROF_VERSION.tgz && \
# # Install XDEBUG
#     set -x \
#     && curl -SL "http://xdebug.org/files/xdebug-$XDEBUG_VERSION.tgz" -o xdebug.tgz \
#     && echo "$XDEBUG_MD5  xdebug.tgz" | shasum -c - \
#     && mkdir -p /usr/src/xdebug \
#     && tar -xf xdebug.tgz -C /usr/src/xdebug --strip-components=1 \
#     && rm xdebug.* \
#     && cd /usr/src/xdebug \
#     && phpize \
#     && ./configure \
#     && make -j"$(nproc)" \
#     && make install \
#     && make clean && \
# # Install PHPREDIS
#     wget https://github.com/phpredis/phpredis/archive/develop.tar.gz && tar -xvf develop.tar.gz && \
#     cd phpredis-develop &&\
#     phpize &&\
#     ./configure &&\
#     make && make install && \
# # Install Composer
#     cd $HOME && \
#     curl -sS https://getcomposer.org/installer | php && \
#     chmod +x composer.phar && \
#     mv composer.phar /usr/local/bin/composer && \
#     /usr/local/bin/composer self-update && \
# # Cleanup build
#     apt-get autoremove -y

# RUN echo "error_reporting = E_ALL\ndisplay_startup_errors = 1\ndisplay_errors = 1" >> /etc/php5/fpm/conf.d/01-errors.ini && \
#     echo "error_reporting = E_ALL\ndisplay_startup_errors = 1\ndisplay_errors = 1" >> /etc/php5/cli/conf.d/01-errors.ini && \
#     echo "mailhub=mailcatcher:1025\nUseTLS=NO\nFromLineOverride=YES" > /etc/ssmtp/ssmtp.conf

# RUN mkdir -p /var/run/sshd /var/log/supervisor && \
#     php5enmod mcrypt && \
#     usermod -u 1000 www-data && \
#     usermod -a -G users www-data
# COPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# # Install useful Drush
# RUN /usr/local/bin/composer global require drush/drush:8.1.2 && \
#     ln -s /root/.composer/vendor/drush/drush/drush /usr/local/bin/drush

# # Setup SSH for behat usage between containers
# RUN echo 'root:root' | chpasswd && \
#     sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
#     mkdir -p /root/.ssh/

# COPY ./ssh/config /root/.ssh/config
# COPY ./ssh/dockerdev /root/.ssh/dockerdev
# COPY ./ssh/dockerdev.pub /root/.ssh/dockerdev.pub
# COPY ./ssh/authorized_keys /root/.ssh/authorized_keys

# ADD ./config/php-fpm.conf /etc/php5/fpm/php-fpm.conf

# Internal Port Expose
EXPOSE 9000 22

# CMD ["/usr/bin/supervisord"]
